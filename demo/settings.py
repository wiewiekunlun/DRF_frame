"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# 当前工程的根目录
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# os.path.abspath(__file__) 找到settings.py的绝对路径
# os.path.dirname(os.path.abspath(__file__)) 找到settings.py 所在的文件夹路径
# os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 找到工程路径


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'dn*8rm%pry-=g$*!^f9s(gh^(634e(%%aimopn2b26pj##l866'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = []  # 浏览器请求中的host需要和里面的host匹配成功。
# debug为False时必须添加可以访问的域名
# ALLOWED_HOSTS = ['*','www.meiduo.site']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # 如果存储在数据库中，需要在项INSTALLED_APPS中安装Session应用。
    # session存储在数据库  默认形式可以不写
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 添加user配置类
    'users.apps.UsersConfig',
    # 添加books配置类
    'books.apps.BooksConfig',

]

# 中间件--请求钩子
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 如需禁用session，将session中间件注释掉即可
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 关闭csrf验证
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'users.middleware.my_middleware',  # 添加中间件
    'users.middleware.my_middleware2',  # 添加中间件
]

ROOT_URLCONF = 'demo.urls'  # luyou 根路径

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 定义模板文件路径
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 表明使用数据库时使用的哪一个操作类（封装了对数据库的所有操作）
        'NAME': 'django_demo',
        # 表明数据库的名字
        'HOST': '127.0.0.1',  # 数据库主机
        'PORT': 3306,  # 数据库端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': 'mysql',  # 数据库用户密码
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
#
# TIME_ZONE = 'UTC'

# 使用中文以及中国时区
LANGUAGE_CODE = 'zh-hans'  # 使用中国语言
TIME_ZONE = 'Asia/Shanghai'


USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

# 访问静态文件的前缀    访问静态文件的前缀  两个斜杠是因为访问路径前后都要有两个斜杠
STATIC_URL = '/static123/'

# Django 仅在调试模式下（DEBUG=True）能对外提供静态文件。

# 配置静态文件目录
# 存放查找静态文件的目录
STATICFILES_DIRS = [
# 指明静态文件目录
    # '/Users/mering/Desktop/django_demo/static_files',# 不建议用绝对路径
    os.path.join(BASE_DIR,'static_files'),
    # 可以理解为将两个参数链接起来
]

# 配置ｒｅｄｉｓ缓存
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",  # RedisCache封装了所有redis的操作
        "LOCATION": "redis://127.0.0.1:6379/1",  # （连接地址  1号数据库）
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "session": {
            "BACKEND": "django_redis.cache.RedisCache",  # RedisCache封装了所有redis的操作
            "LOCATION": "redis://127.0.0.1:6379/2",  # （连接地址  1号数据库）
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient",
            }
        }
}
# session 的存储方式    本地缓存
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# 指定库来存储session数据
SESSION_CACHE_ALIAS = "session"

# 文件上传保存目录
MEDIA_ROOT=os.path.join(BASE_DIR,"static_files/media")